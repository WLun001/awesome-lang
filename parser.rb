#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.14
# from Racc grammer file "".
#

require 'racc/parser.rb'

  require "lexer"
  require "nodes"

class Parser < Racc::Parser

module_eval(<<'...end grammar.y/module_eval...', 'grammar.y', 226)
  def parse(code, show_tokens=false)
    @tokens = Lexer.new.tokenize(code) # Tokenize the code using our lexer
    puts @tokens.inspect if show_tokens
    do_parse # Kickoff the parsing process
  end
  
  def next_token
    @tokens.shift
  end
...end grammar.y/module_eval...
##### State transition tables begin ###

racc_action_table = [
    28,    29,    26,    27,    17,    19,    20,    21,    22,    23,
    24,    25,    28,    29,    26,    27,    17,    19,    20,    21,
    22,    23,    24,    25,    32,    75,    43,    44,    41,    42,
    16,    92,    18,    17,    32,    54,    43,    44,    41,    42,
    51,    50,    16,    77,    18,    28,    29,    26,    27,    49,
    19,    20,    21,    22,    23,    24,    25,    28,    29,    26,
    27,    18,    19,    20,    21,    22,    23,    24,    25,    75,
    32,    17,    43,    44,    47,    16,    71,    32,    32,    32,
    88,    43,    44,    28,    29,    26,    27,    16,    19,    20,
    21,    22,    23,    24,    25,    28,    29,    26,    27,    18,
    19,    20,    21,    22,    23,    24,    25,    86,    30,    28,
    29,    26,    27,    16,    19,    20,    21,    22,    23,    24,
    25,    28,    29,    26,    27,    16,    19,    20,    21,    22,
    23,    24,    25,    75,    56,    28,    29,    26,    27,    16,
    19,    20,    21,    22,    23,    24,    25,    28,    29,    26,
    27,    16,    19,    20,    21,    22,    23,    24,    25,   nil,
   nil,    28,    29,    26,    27,    16,    19,    20,    21,    22,
    23,    24,    25,    28,    29,    26,    27,    16,    19,    20,
    21,    22,    23,    24,    25,   nil,   nil,    28,    29,    26,
    27,    16,    19,    20,    21,    22,    23,    24,    25,    28,
    29,    26,    27,    16,    19,    20,    21,    22,    23,    24,
    25,   nil,   nil,    28,    29,    26,    27,    16,    19,    20,
    21,    22,    23,    24,    25,    28,    29,    26,    27,    16,
    19,    20,    21,    22,    23,    24,    25,   nil,   nil,    28,
    29,    26,    27,    16,    19,    20,    21,    22,    23,    24,
    25,    28,    29,    26,    27,    16,    19,    20,    21,    22,
    23,    24,    25,   nil,   nil,    28,    29,    26,    27,    16,
    19,    20,    21,    22,    23,    24,    25,    28,    29,    26,
    27,    16,    19,    20,    21,    22,    23,    24,    25,   nil,
   nil,    28,    29,    26,    27,    16,    19,    20,    21,    22,
    23,    24,    25,    28,    29,    26,    27,    16,    19,    20,
    21,    22,    23,    24,    25,    83,    48,    82,    47,   nil,
    32,    16,    43,    44,    41,    42,    37,    38,    39,    40,
    35,    36,    32,    16,    43,    44,    41,    42,    37,    38,
    39,    40,    35,    36,    34,    33,    75,   nil,    32,    69,
    43,    44,    41,    42,    37,    38,    39,    40,    35,    36,
    34,    33,    75,    90,    32,    89,    43,    44,    41,    42,
    37,    38,    39,    40,    35,    36,    34,    33,    32,   nil,
    43,    44,    41,    42,    37,    38,    39,    40,    35,    36,
    34,    33,    32,   nil,    43,    44,    41,    42,    37,    38,
    39,    40,    35,    36,    34,    33,    32,   nil,    43,    44,
    41,    42,    37,    38,    39,    40,    35,    36,    34,    33,
    32,   nil,    43,    44,    41,    42,    37,    38,    39,    40,
    35,    36,    34,    33,    32,   nil,    43,    44,    41,    42,
    37,    38,    39,    40,    35,    36,    34,    33,    32,   nil,
    43,    44,    41,    42,    37,    38,    39,    40,    35,    36,
    34,    33,    32,   nil,    43,    44,    41,    42,    37,    38,
    39,    40,    35,    36,    34,    32,   nil,    43,    44,    41,
    42,    37,    38,    39,    40,    32,   nil,    43,    44,    41,
    42,    37,    38,    39,    40,    32,   nil,    43,    44,    41,
    42,    32,   nil,    43,    44,    41,    42 ]

racc_action_check = [
     0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     0,     0,    75,    75,    75,    75,    75,    75,    75,    75,
    75,    75,    75,    75,    64,    50,    64,    64,    64,    64,
     0,    90,     0,     2,    62,    30,    62,    62,    62,    62,
    27,    26,    75,    50,    75,    47,    47,    47,    47,    25,
    47,    47,    47,    47,    47,    47,    47,    42,    42,    42,
    42,     2,    42,    42,    42,    42,    42,    42,    42,    51,
    66,    84,    66,    66,    56,    47,    47,    67,    68,    65,
    84,    65,    65,    83,    83,    83,    83,    42,    83,    83,
    83,    83,    83,    83,    83,    16,    16,    16,    16,    84,
    16,    16,    16,    16,    16,    16,    16,    77,     1,    41,
    41,    41,    41,    83,    41,    41,    41,    41,    41,    41,
    41,    43,    43,    43,    43,    16,    43,    43,    43,    43,
    43,    43,    43,    89,    32,    49,    49,    49,    49,    41,
    49,    49,    49,    49,    49,    49,    49,    48,    48,    48,
    48,    43,    48,    48,    48,    48,    48,    48,    48,   nil,
   nil,    28,    28,    28,    28,    49,    28,    28,    28,    28,
    28,    28,    28,    29,    29,    29,    29,    48,    29,    29,
    29,    29,    29,    29,    29,   nil,   nil,    31,    31,    31,
    31,    28,    31,    31,    31,    31,    31,    31,    31,    44,
    44,    44,    44,    29,    44,    44,    44,    44,    44,    44,
    44,   nil,   nil,    33,    33,    33,    33,    31,    33,    33,
    33,    33,    33,    33,    33,    34,    34,    34,    34,    44,
    34,    34,    34,    34,    34,    34,    34,   nil,   nil,    35,
    35,    35,    35,    33,    35,    35,    35,    35,    35,    35,
    35,    36,    36,    36,    36,    34,    36,    36,    36,    36,
    36,    36,    36,   nil,   nil,    37,    37,    37,    37,    35,
    37,    37,    37,    37,    37,    37,    37,    38,    38,    38,
    38,    36,    38,    38,    38,    38,    38,    38,    38,   nil,
   nil,    39,    39,    39,    39,    37,    39,    39,    39,    39,
    39,    39,    39,    40,    40,    40,    40,    38,    40,    40,
    40,    40,    40,    40,    40,    72,    24,    72,    24,   nil,
    58,    39,    58,    58,    58,    58,    58,    58,    58,    58,
    58,    58,    45,    40,    45,    45,    45,    45,    45,    45,
    45,    45,    45,    45,    45,    45,    53,   nil,    53,    45,
    53,    53,    53,    53,    53,    53,    53,    53,    53,    53,
    53,    53,    52,    85,    52,    85,    52,    52,    52,    52,
    52,    52,    52,    52,    52,    52,    52,    52,    87,   nil,
    87,    87,    87,    87,    87,    87,    87,    87,    87,    87,
    87,    87,    74,   nil,    74,    74,    74,    74,    74,    74,
    74,    74,    74,    74,    74,    74,    73,   nil,    73,    73,
    73,    73,    73,    73,    73,    73,    73,    73,    73,    73,
    55,   nil,    55,    55,    55,    55,    55,    55,    55,    55,
    55,    55,    55,    55,     3,   nil,     3,     3,     3,     3,
     3,     3,     3,     3,     3,     3,     3,     3,    70,   nil,
    70,    70,    70,    70,    70,    70,    70,    70,    70,    70,
    70,    70,    57,   nil,    57,    57,    57,    57,    57,    57,
    57,    57,    57,    57,    57,    59,   nil,    59,    59,    59,
    59,    59,    59,    59,    59,    60,   nil,    60,    60,    60,
    60,    60,    60,    60,    60,    63,   nil,    63,    63,    63,
    63,    61,   nil,    61,    61,    61,    61 ]

racc_action_pointer = [
    -2,   108,    27,   418,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,    93,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   286,    19,    29,    27,   159,   171,
    35,   185,   122,   211,   223,   237,   249,   263,   275,   289,
   301,   107,    55,   119,   197,   316,   nil,    43,   145,   133,
    11,    55,   348,   332,   nil,   404,    42,   446,   304,   459,
   469,   485,    18,   479,     8,    63,    54,    61,    62,   nil,
   432,   nil,   284,   390,   376,    10,   nil,    95,   nil,   nil,
   nil,   nil,   nil,    81,    65,   332,   nil,   362,   nil,   119,
    19,   nil,   nil ]

racc_action_default = [
    -1,   -58,    -2,    -3,    -6,    -7,    -8,    -9,   -10,   -11,
   -12,   -13,   -14,   -15,   -16,   -17,   -58,   -19,   -20,   -21,
   -22,   -23,   -24,   -25,   -47,   -45,   -58,   -58,   -58,   -58,
   -58,    -5,   -58,   -58,   -58,   -58,   -58,   -58,   -58,   -58,
   -58,   -58,   -58,   -58,   -58,   -58,   -26,   -58,   -58,   -58,
   -58,   -58,   -58,   -58,    93,    -4,   -28,   -33,   -34,   -35,
   -36,   -37,   -38,   -39,   -40,   -41,   -42,   -43,   -44,   -18,
   -31,   -29,   -58,   -48,   -46,   -58,   -50,   -52,   -55,   -56,
   -57,   -27,   -30,   -58,   -58,   -58,   -53,   -32,   -49,   -58,
   -58,   -51,   -54 ]

racc_goto_table = [
    31,     2,    45,    76,    78,    79,    80,    46,    85,    72,
     1,   nil,   nil,   nil,    52,    53,   nil,    55,   nil,    57,
    58,    59,    60,    61,    62,    63,    64,    65,    66,    67,
    68,   nil,   nil,    70,    73,    74,   nil,   nil,   nil,    81,
   nil,   nil,    91,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    87,
   nil,   nil,   nil,   nil,   nil,   nil,    84,   nil,   nil,   nil,
   nil,   nil,    31 ]

racc_goto_check = [
     4,     2,     3,    18,    18,    18,    18,    16,    19,    17,
     1,   nil,   nil,   nil,     3,     3,   nil,     3,   nil,     3,
     3,     3,     3,     3,     3,     3,     3,     3,     3,     3,
     3,   nil,   nil,     3,     3,     3,   nil,   nil,   nil,    16,
   nil,   nil,    18,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,     3,
   nil,   nil,   nil,   nil,   nil,   nil,     2,   nil,   nil,   nil,
   nil,   nil,     4 ]

racc_goto_pointer = [
   nil,    10,     1,   -14,    -2,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   -17,   -38,   -47,   -69 ]

racc_goto_default = [
   nil,   nil,   nil,     3,     4,     5,     6,     7,     8,     9,
    10,    11,    12,    13,    14,    15,   nil,   nil,   nil,   nil ]

racc_reduce_table = [
  0, 0, :racc_error,
  0, 36, :_reduce_1,
  1, 36, :_reduce_2,
  1, 37, :_reduce_3,
  3, 37, :_reduce_4,
  2, 37, :_reduce_5,
  1, 37, :_reduce_6,
  1, 38, :_reduce_none,
  1, 38, :_reduce_none,
  1, 38, :_reduce_none,
  1, 38, :_reduce_none,
  1, 38, :_reduce_none,
  1, 38, :_reduce_none,
  1, 38, :_reduce_none,
  1, 38, :_reduce_none,
  1, 38, :_reduce_none,
  1, 38, :_reduce_none,
  1, 38, :_reduce_none,
  3, 38, :_reduce_18,
  1, 39, :_reduce_none,
  1, 39, :_reduce_none,
  1, 40, :_reduce_21,
  1, 40, :_reduce_22,
  1, 40, :_reduce_23,
  1, 40, :_reduce_24,
  1, 40, :_reduce_25,
  2, 41, :_reduce_26,
  4, 41, :_reduce_27,
  3, 41, :_reduce_28,
  2, 51, :_reduce_29,
  3, 51, :_reduce_30,
  1, 52, :_reduce_31,
  3, 52, :_reduce_32,
  3, 42, :_reduce_33,
  3, 42, :_reduce_34,
  3, 42, :_reduce_35,
  3, 42, :_reduce_36,
  3, 42, :_reduce_37,
  3, 42, :_reduce_38,
  3, 42, :_reduce_39,
  3, 42, :_reduce_40,
  3, 42, :_reduce_41,
  3, 42, :_reduce_42,
  3, 42, :_reduce_43,
  3, 42, :_reduce_44,
  1, 43, :_reduce_45,
  3, 44, :_reduce_46,
  1, 45, :_reduce_47,
  3, 46, :_reduce_48,
  3, 53, :_reduce_49,
  3, 47, :_reduce_50,
  6, 47, :_reduce_51,
  0, 54, :_reduce_52,
  1, 54, :_reduce_53,
  3, 54, :_reduce_54,
  3, 48, :_reduce_55,
  3, 49, :_reduce_56,
  3, 50, :_reduce_57 ]

racc_reduce_n = 58

racc_shift_n = 93

racc_token_table = {
  false => 0,
  :error => 1,
  :IF => 2,
  :WHILE => 3,
  :DEF => 4,
  :CLASS => 5,
  :NEWLINE => 6,
  :NUMBER => 7,
  :STRING => 8,
  :TRUE => 9,
  :FALSE => 10,
  :NIL => 11,
  :IDENTIFIER => 12,
  :CONSTANT => 13,
  :INDENT => 14,
  :DEDENT => 15,
  "." => 16,
  "!" => 17,
  "*" => 18,
  "/" => 19,
  "+" => 20,
  "-" => 21,
  ">" => 22,
  ">=" => 23,
  "<" => 24,
  "<=" => 25,
  "==" => 26,
  "!=" => 27,
  "&&" => 28,
  "||" => 29,
  "=" => 30,
  "," => 31,
  "(" => 32,
  ")" => 33,
  ";" => 34 }

racc_nt_base = 35

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "IF",
  "WHILE",
  "DEF",
  "CLASS",
  "NEWLINE",
  "NUMBER",
  "STRING",
  "TRUE",
  "FALSE",
  "NIL",
  "IDENTIFIER",
  "CONSTANT",
  "INDENT",
  "DEDENT",
  "\".\"",
  "\"!\"",
  "\"*\"",
  "\"/\"",
  "\"+\"",
  "\"-\"",
  "\">\"",
  "\">=\"",
  "\"<\"",
  "\"<=\"",
  "\"==\"",
  "\"!=\"",
  "\"&&\"",
  "\"||\"",
  "\"=\"",
  "\",\"",
  "\"(\"",
  "\")\"",
  "\";\"",
  "$start",
  "Program",
  "Expressions",
  "Expression",
  "Terminator",
  "Literal",
  "Call",
  "Operator",
  "GetConstant",
  "SetConstant",
  "GetLocal",
  "SetLocal",
  "Def",
  "Class",
  "If",
  "While",
  "Arguments",
  "ArgList",
  "Block",
  "ParamList" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

module_eval(<<'.,.,', 'grammar.y', 50)
  def _reduce_1(val, _values, result)
     result = Nodes.new([]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 51)
  def _reduce_2(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 68)
  def _reduce_3(val, _values, result)
     result = Nodes.new(val) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 69)
  def _reduce_4(val, _values, result)
     result = val[0] << val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 70)
  def _reduce_5(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 71)
  def _reduce_6(val, _values, result)
     result = Nodes.new([]) 
    result
  end
.,.,

# reduce 7 omitted

# reduce 8 omitted

# reduce 9 omitted

# reduce 10 omitted

# reduce 11 omitted

# reduce 12 omitted

# reduce 13 omitted

# reduce 14 omitted

# reduce 15 omitted

# reduce 16 omitted

# reduce 17 omitted

module_eval(<<'.,.,', 'grammar.y', 87)
  def _reduce_18(val, _values, result)
     result = val[1] 
    result
  end
.,.,

# reduce 19 omitted

# reduce 20 omitted

module_eval(<<'.,.,', 'grammar.y', 105)
  def _reduce_21(val, _values, result)
     result = NumberNode.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 106)
  def _reduce_22(val, _values, result)
     result = StringNode.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 107)
  def _reduce_23(val, _values, result)
     result = TrueNode.new 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 108)
  def _reduce_24(val, _values, result)
     result = FalseNode.new 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 109)
  def _reduce_25(val, _values, result)
     result = NilNode.new 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 121)
  def _reduce_26(val, _values, result)
     result = CallNode.new(nil, val[0], val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 123)
  def _reduce_27(val, _values, result)
     result = CallNode.new(val[0], val[2], val[3]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 124)
  def _reduce_28(val, _values, result)
     result = CallNode.new(val[0], val[2], []) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 128)
  def _reduce_29(val, _values, result)
     result = [] 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 129)
  def _reduce_30(val, _values, result)
     result = val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 133)
  def _reduce_31(val, _values, result)
     result = val 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 134)
  def _reduce_32(val, _values, result)
     result = val[0] << val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 145)
  def _reduce_33(val, _values, result)
     result = CallNode.new(val[0], val[1], [val[2]]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 146)
  def _reduce_34(val, _values, result)
     result = CallNode.new(val[0], val[1], [val[2]]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 147)
  def _reduce_35(val, _values, result)
     result = CallNode.new(val[0], val[1], [val[2]]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 148)
  def _reduce_36(val, _values, result)
     result = CallNode.new(val[0], val[1], [val[2]]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 149)
  def _reduce_37(val, _values, result)
     result = CallNode.new(val[0], val[1], [val[2]]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 150)
  def _reduce_38(val, _values, result)
     result = CallNode.new(val[0], val[1], [val[2]]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 151)
  def _reduce_39(val, _values, result)
     result = CallNode.new(val[0], val[1], [val[2]]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 152)
  def _reduce_40(val, _values, result)
     result = CallNode.new(val[0], val[1], [val[2]]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 153)
  def _reduce_41(val, _values, result)
     result = CallNode.new(val[0], val[1], [val[2]]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 154)
  def _reduce_42(val, _values, result)
     result = CallNode.new(val[0], val[1], [val[2]]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 155)
  def _reduce_43(val, _values, result)
     result = CallNode.new(val[0], val[1], [val[2]]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 156)
  def _reduce_44(val, _values, result)
     result = CallNode.new(val[0], val[1], [val[2]]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 161)
  def _reduce_45(val, _values, result)
     result = GetConstantNode.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 165)
  def _reduce_46(val, _values, result)
     result = SetConstantNode.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 169)
  def _reduce_47(val, _values, result)
     result = GetLocalNode.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 173)
  def _reduce_48(val, _values, result)
     result = SetLocalNode.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 185)
  def _reduce_49(val, _values, result)
     result = val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 191)
  def _reduce_50(val, _values, result)
     result = DefNode.new(val[1], [], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 193)
  def _reduce_51(val, _values, result)
     result = DefNode.new(val[1], val[3], val[5]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 197)
  def _reduce_52(val, _values, result)
     result = [] 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 198)
  def _reduce_53(val, _values, result)
     result = val 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 199)
  def _reduce_54(val, _values, result)
     result = val[0] << val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 205)
  def _reduce_55(val, _values, result)
     result = ClassNode.new(val[1], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 210)
  def _reduce_56(val, _values, result)
     result = IfNode.new(val[1], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 214)
  def _reduce_57(val, _values, result)
     result = WhileNode.new(val[1], val[2]) 
    result
  end
.,.,

def _reduce_none(val, _values, result)
  val[0]
end

end   # class Parser
